
    ssl_certificate /etc/nginx/ssl/<cert>; <--- ADJUST THIS
    ssl_certificate_key /etc/nginx/ssl/<key>; <--- ADJUST THIS

    # To test strenght : https://www.ssllabs.com/ssltest/index.html
    # enable session resumption to improve https performance
    ssl_session_cache shared:XYZ:20m; <--- ADJUST THIS
    ssl_session_timeout 15m;
    ssl_session_tickets off;

    # only secure protocols
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # https://wiki.mozilla.org/Security/Server_Side_TLS : Modern
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # enable ocsp stapling : requires a cert with ssl_stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/<ca>; <--- ADJUST THIS

    # The Logjam Attack, So, we need to ensure that weâ€™re not using older
    # export-grade crypto, and we need to generate our own Diffie-Hellman group:
    # openssl dhparam -out /etc/nginx/ssl/dhparams.pem 2048
    ssl_dhparam /etc/nginx/ssl/dhparams.pem; <--- ADJUST THIS

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";
